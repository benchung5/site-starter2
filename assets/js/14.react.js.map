{"version":3,"sources":["webpack:///./src/js/react-app/components/admin/auth/signin.js","webpack:///./src/js/react-app/components/admin/parts/form_fields.js","webpack:///./src/js/react-app/actions/auth/index.js"],"names":["Signin","props","authenticated","history","push","globals","ADMIN_URL","nextProps","email","password","key","signinUser","errorMessage","handleSubmit","fields","handleFormSubmit","bind","renderField","renderAlert","Component","validate","formProps","errors","mapStateToProps","state","auth","error","form","field","meta","touched","className","type","label","input","signupUser","clearUser","authError","signoutUser","fetchMessage","env","process","SERVER_URL","require","POST_CONFIG","dispatch","axios","post","then","response","data","token","AUTH_USER","localStorage","setItem","catch","ADD_USER","payload","err","AUTH_ERROR","removeItem","UNAUTH_USER","get","headers","authorization","getItem","FETCH_MESSAGE","message"],"mappings":"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","file":"14.react.js","sourcesContent":["import React, {Component} from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { signinUser } from '../../../actions/auth';\nimport { connect } from 'react-redux';\nimport renderField from '../parts/form_fields';\nimport { globals } from '../../../config.js';\n\n\nclass Signin extends Component {\n\n    componentWillMount() {\n        if (this.props.authenticated) {\n          // if the user is already logged in, just forward them right to the dashboard\n          this.props.history.push('/'+globals.ADMIN_URL);\n        }\n    }\n\n    componentWillUpdate(nextProps) {\n        if (nextProps.authenticated) {\n          //if just authenticated, redirect to dashboard\n          this.props.history.push('/'+globals.ADMIN_URL);\n        }\n    }\n\n    handleFormSubmit({ email, password, key }) {\n        //need to do sometihing to log user in\n        this.props.signinUser({ email, password, key });\n    }\n\n    renderAlert() {\n        if (this.props.errorMessage) {\n            return (\n                <div className=\"alert alert-danger\">\n                    <strong>Oops!</strong> {this.props.errorMessage}\n                </div>\n            );\n        }\n    }\n\n    render() {\n        //props that are pulled off of redux form\n        const { handleSubmit, fields: {email, password, key} } = this.props;\n\n        return (\n            <div className=\"admin-main\">\n            <div className=\"row\">\n                    <div className=\"columns small-12\">\n                        <h1 className=\"margin-bottom\">Login:</h1>\n                        <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                            <Field\n                              label=\"Email:\"\n                              name=\"email\"\n                              component={renderField}\n                            />\n                            <Field\n                              label=\"Password:\"\n                              name=\"password\"\n                              component={renderField}\n                            />\n                            <Field\n                              label=\"Key:\"\n                              name=\"key\"\n                              component={renderField}\n                            />\n\n                            { this.renderAlert() }\n                            <button action=\"submit\" className=\"btn btn-primary\">Sign in</button>\n                        </form>\n                    </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nfunction validate(formProps) {\n  const errors = {};\n\n  if (!formProps.email) {\n    errors.email = 'Please enter an email';\n  }\n\n  if (!formProps.password) {\n    errors.password = 'Please enter a password';\n  }\n\n  if (!formProps.key) {\n    errors.key = 'Please enter a key';\n  }\n  \n  return errors;\n}\n\nfunction mapStateToProps(state) {\n    //have our state to show up in props as errorMessage\n    return {\n        authenticated: state.auth.authenticated,\n        errorMessage: state.auth.error,\n        authenticated: state.auth.authenticated\n    }\n}\n\nexport default reduxForm({\n    validate,\n    form: 'signin',\n    fields: ['email', 'password']\n})(\n    connect(mapStateToProps, { signinUser })(Signin)\n    );\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/react-app/components/admin/auth/signin.js","import React from 'react';\n\nfunction renderField(field) {\n  const { meta: { touched, error } } = field;\n  const className = `form-group ${touched && error ? 'has-danger' : ''}`;\n\n    if (field.type === 'textarea') {\n        return (\n          <div className={className}>\n            <label>{field.label}</label>\n            <textarea\n              className=\"form-control\"\n              rows=\"12\" \n              cols=\"50\"\n              {...field.input}\n              >\n            </textarea>\n            <div className=\"error\">\n              {touched ? error : ''}\n            </div>\n          </div>\n        );\n    } else {\n        return (\n          <div className={className}>\n            <label>{field.label}</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              {...field.input}\n            />\n            <div className=\"error\">\n              {touched ? error : ''}\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default renderField;\n\n\n// WEBPACK FOOTER //\n// ./src/js/react-app/components/admin/parts/form_fields.js","import axios from 'axios';\nimport history from '../../history';\n//config\nconst env = process.env.NODE_ENV || \"development\";\nvar { SERVER_URL } = require('../../config')[env];\nvar { POST_CONFIG } = require('../../config')['globals'];\nimport {\n  AUTH_USER,\n  UNAUTH_USER,\n  AUTH_ERROR,\n  FETCH_MESSAGE,\n  ADD_USER\n} from '../types';\n\nexport function signinUser({ email, password, key }) {\n  return function(dispatch) {\n    // Submit email/password to the server\n    axios.post(`${SERVER_URL}/users/sign_in`, { email, password, key }, POST_CONFIG)\n      .then(response => {\n        // If request is good...\n        if(response.data.token) {\n          // - Update state to indicate user is authenticated\n          dispatch({ type: AUTH_USER });\n          // - Save the JWT token\n          localStorage.setItem('token', response.data.token);\n        } else {\n          // - Show an error to the user\n          dispatch(authError('Bad Login Info'));\n        }\n      })\n      .catch(() => {\n        // If request is bad...\n        // - Show an error to the user\n        dispatch(authError('Error logging in'));\n      });\n  }\n}\n\nexport function signupUser({ email, password }) {\n  return function(dispatch) {\n    axios.post(`${SERVER_URL}/users/create`, { email, password })\n      .then(response => {\n        if(response.data.error) {\n          dispatch(authError(`there was an error signing up user: ${response.data.error}`));\n        } else {\n          dispatch({\n            type: ADD_USER,\n            payload: response.data\n          });\n          //localStorage.setItem('token', response.data.token);\n        }\n      })\n      .catch(err => dispatch(authError(`there was an error signing up: ${err}`)));\n  }\n}\n\nexport function clearUser() {\n  return {\n    type: ADD_USER,\n    payload: ''\n  }\n}\n\nexport function authError(error) {\n  return {\n    type: AUTH_ERROR,\n    payload: error\n  };\n}\n\nexport function signoutUser() {\n  localStorage.removeItem('token');\n  return { type: UNAUTH_USER };\n}\n\nexport function fetchMessage() {\n  return function(dispatch) {\n    axios.get(SERVER_URL, {\n      headers: { authorization: localStorage.getItem('token') }\n    })\n      .then(response => {\n        dispatch({\n          type: FETCH_MESSAGE,\n          payload: response.data.message\n        });\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/react-app/actions/auth/index.js"],"sourceRoot":""}